name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

{% if package_manager == 'Esy' -%}
{% raw -%}
jobs:
  build:
    name: Build and test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:

      - name: Use Node 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install esy
        run: npm install -g esy@latest

      - name: Install dependencies
        run: esy install

      - name: Build
        run: esy build

      - name: Check formatting
        run: esy fmt

      - name: Run tests
        run: esy test
        timeout-minutes: 1
{%- endraw %}
{% else -%}
{% raw -%}
{% raw -%}
jobs:
  build-and-test:
    strategy:
      fail-fast: false

      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

        ocaml-compiler:
          - 4.12.x

    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: ${{ matrix.os != 'macos-latest' }}

      - name: Install ocamlformat
        run: opam install ocamlformat.0.18.0
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Install opam packages
        run: opam install . --with-test

      - name: Check formatting
        run: make fmt
        if: ${{ matrix.os == 'ubuntu-latest' && always() }}

      - name: Run build
        run: make build

      - name: Run the unit tests
        run: make test
        timeout-minutes: 1
{%- endraw %}
{% endif %}